from django.contrib.auth.models import User, AbstractUser
from django.db import models




class CustomUser(AbstractUser):
    email = models.EmailField(unique=True)

class Profile(models.Model):
    ages = models.CharField(max_length=3, default="")  # ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏¢‡∏∏
    nationality = models.CharField(max_length=50, default="")  # ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏±‡∏ç‡∏ä‡∏≤‡∏ï‡∏¥
    user = models.OneToOneField("app_users.CustomUser", on_delete= models.CASCADE)

class DataEngagement(models.Model):
    # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö Photo (‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢ engagement)
    photo = models.ForeignKey('app_cameras.Photo', on_delete=models.CASCADE, related_name='engagements')

    # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö Profile (‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°)
    profile = models.ForeignKey('app_users.Profile', on_delete=models.CASCADE, related_name='engagements')

    # ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° 1: ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏≤‡πÄ‡∏¢‡∏∑‡∏≠‡∏ô (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1)
    REASON_CHOICES = [
        ('nature', 'Beautiful nature and scenery'),
        ('activities', 'Interesting activities'),
        ('culture', 'Culture and history'),
        ('recommendations', 'Recommends from reviews'),
        ('convenience', 'Convenient location or easy access'),
        ('promotions', 'Special promotions or discounts'),
    ]
    reasons_for_visit = models.JSONField(default=list)  # ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏¥‡∏™‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•

    # ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° 2: ‡∏°‡∏≤‡∏Å‡∏±‡∏ö‡πÉ‡∏Ñ‡∏£
    TRAVEL_WITH_CHOICES = [
        ('alone', 'Alone'),
        ('family', 'With family'),
        ('friends', 'With friends'),
        ('tour_group', 'With a tour group'),
    ]
    travel_with = models.CharField(max_length=20, choices=TRAVEL_WITH_CHOICES)

    # ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° 3: ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà
    SATISFACTION_CHOICES = [
        (1, 'üò°'),
        (2, 'üòû'),
        (3, 'üòë'),
        (4, 'üôÇ'),
        (5, 'üòç'),
    ]
    location_satisfaction = models.IntegerField(choices=SATISFACTION_CHOICES)

    # ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° 4: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà (‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)
    location_comment = models.TextField(blank=True, null=True)

    # ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° 5: ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Elevview
    elevview_satisfaction = models.IntegerField(choices=SATISFACTION_CHOICES)

    # ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° 6: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Elevview (‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)
    elevview_comment = models.TextField(blank=True, null=True)

    # ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° 7: ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏µ‡πà‡∏ß‡∏±‡∏ô
    PLANNING_CHOICES = [
        ('last_minute', 'No prior planning (last-minute decision)'),
        ('1_3_days', '1-3 days in advance'),
        ('1_4_weeks', '1-4 weeks in advance'),
        ('more_than_1_month', 'More than 1 month in advance'),
    ]
    planning_ahead = models.CharField(max_length=20, choices=PLANNING_CHOICES)

    # ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°
    timestamp = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"Engagement by {self.profile.user.username} for photo {self.photo.id}"