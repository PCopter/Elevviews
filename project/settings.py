"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
from dotenv import load_dotenv
import os
load_dotenv()

SECRET_KEY = 'django-insecure-$d8ty4@24383s1+)q-gim=785ork8z=)7@1#0j9j-6rquig0ck'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = "True"

# production_host = os.getenv("PRODUCTION_HOST")
# ALLOWED_HOSTS = [production_host] if production_host is not None else ["127.0.0.1"]
# ALLOWED_HOSTS = [production_host] if production_host is not None else ["127.0.0.1"]
# ALLOWED_HOSTS = ["192.168.0.109" , "127.0.0.1" , "192.168.164.129"]
# ALLOWED_HOSTS = ["your-domain.com", "18.141.225.87"]
ALLOWED_HOSTS = ["18.140.53.117" , "127.0.0.1"]


# Application definition
INSTALLED_APPS = [
    'daphne',  # ใช้ Daphne แทน ASGI Server
    'channels',
    'storages',
    'app_users.apps.AppUsersConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app_general.apps.AppGeneralConfig',
    'app_cameras.apps.AppCameraConfig',
    
]
ASGI_APPLICATION = "project.asgi.application"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


DATABASES = {
    # 'default': {
    #     'ENGINE': 'mysql.connector.django',
    #     'ENGINE': 'django.db.backends.mysql',  
    #     'NAME': os.getenv("DB_NAME"),
    #     'USER' : os.getenv("DB_USER"),
    #     'PASSWORD' : os.getenv("DB_PASSWORD"),
    #     'HOST' : os.getenv("DB_HOST", "localhost"),
    #     'PORT' : os.getenv("DB_PORT", "3306"),
    #     'OPTIONS': {
    #         'charset': 'utf8mb4', 
    #     },
    # }

    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'mydb',
        'USER': 'Elevviews',
        'PASSWORD': 'cC.053346532',
        'HOST': 'localhost',
        'PORT': '3306',
        'OPTIONS': {
             'charset': 'utf8mb4', 
         },
    }

}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Bangkok'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Auth
LOGIN_REDIRECT_URL = "home"
LOGOUT_REDIRECT_URL = 'home'
LOGIN_URL = "login"

AUTH_USER_MODEL = "app_users.CustomUser"
AUTHENTICATION_BACKENDS = [
    "app_users.utils.auth_email_backend.EmailBackend",
    "django.contrib.auth.backends.ModelBackend"
]


# Email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = 'copter.phanuwat@gmail.com'
EMAIL_HOST_PASSWORD = 'aqbt gjtf rbws neuf'
PASSWORD_RESET_TIMEOUT = 300


import os
# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# AWS_Config Iot core
AWS_ACCESS_KEY = os.getenv("AWS_ACCESS_KEY")
AWS_SECRET_KEY = os.getenv("AWS_SECRET_KEY")

# AWS_Config S3 - IAM

AWS_ACCESS_KEY_ID = os.getenv("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = os.getenv("AWS_SECRET_ACCESS_KEY")
AWS_STORAGE_BUCKET_NAME = "elevview"
AWS_S3_REGION_NAME = "ap-southeast-1"  # เช่น 'us-east-1'

AWS_S3_CUSTOM_DOMAIN = f"{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com"

# ตั้งค่าให้ใช้ S3 เป็นที่เก็บไฟล์สื่อ
DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"

# URL ที่ใช้เข้าถึงไฟล์บน S3
MEDIA_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/"

AWS_S3_SIGNATURE_NAME = 's3v4'
AWS_S3_FILE_OVERWRITE = False
AWS_S3_VERIFY = True